/*
*
* Star Rating component written with Stencil.js
* by Aaron Sterling
* https://github.com/Aaron-Sterling/star-rating-web-component
*
*/
export class StarRating {
    constructor() {
        this.rating = 0;
        this.size = 25;
        this.stars = 5;
        this.color = 'gold';
        this._starCounter = new Array();
    }
    componentWillLoad() {
        this.firstRun();
    }
    firstRun() {
        this.backupOriginalProps();
        this.initializeInternalState();
        console.log(this.stars);
    }
    backupOriginalProps() {
        this._initialRatingOriginal = this.rating;
        this._fontSizeOriginal = this.size;
        this._numberOfStarsOriginal = this.stars;
        this._colorOriginal = this.color;
    }
    initializeInternalState() {
        this._fontSizeExpression = this.size.toString() + 'px';
        this.currentRating = this.rating;
        this._starCounter = new Array(this.stars).fill(true);
    }
    propsHaveChanged() {
        return !(this.rating === this._initialRatingOriginal &&
            this.size === this._fontSizeOriginal &&
            this.color === this._colorOriginal &&
            this.stars === this._numberOfStarsOriginal);
    }
    componentDidLoad() {
        if (this.propsHaveChanged) {
            this.firstRun();
        }
    }
    render() {
        return (h("span", null, this._starCounter.map((_, currentIndex) => h("ion-icon", { name: this.iconName(currentIndex + 1), onClick: _ => this.updateRating(currentIndex + 1), style: { 'font-size': this._fontSizeExpression, 'color': this.color } }))));
    }
    updateRating(rating) {
        this.currentRating = rating;
        this.rated.emit(rating);
    }
    iconName(starNumber) {
        const threshold = this.currentRating - starNumber;
        if (threshold >= 0) {
            return 'star';
        }
        else {
            return 'star-outline';
        }
        ;
    }
    static get is() { return "star-rating"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return { "color": { "type": String, "attr": "color" }, "currentRating": { "state": true }, "rating": { "type": Number, "attr": "rating" }, "size": { "type": Number, "attr": "size" }, "stars": { "type": Number, "attr": "stars" } }; }
    static get events() { return [{ "name": "rated", "method": "rated", "bubbles": true, "cancelable": true, "composed": true }]; }
    static get style() { return "/**style-placeholder:star-rating:**/"; }
}
