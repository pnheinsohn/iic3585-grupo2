{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js??ref--13-0!/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","mtime":1591586029830},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9zZWJhL0Rlc2t0b3AvdGFyZWFzLWF2YW56YWRvL3RhcmVhNS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9zZWJhL0Rlc2t0b3AvdGFyZWFzLWF2YW56YWRvL3RhcmVhNS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBjb2xsZWN0aW9ucyBmcm9tICcuL2NvbGxlY3Rpb25zJzsKdmFyIGxvY2FsTWFpblVSTCA9ICJodHRwOi8vbG9jYWxob3N0OjMwMDAvYWxidW1zIjsKdmFyIHN0YXRlID0gewogIGFsYnVtczogW10KfTsKdmFyIGdldHRlcnMgPSB7CiAgYWxsQWxidW1zOiBmdW5jdGlvbiBhbGxBbGJ1bXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5hbGJ1bXM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBmZXRjaEFsYnVtczogZnVuY3Rpb24gZmV0Y2hBbGJ1bXMoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGxvY2FsTWFpblVSTCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0QWxidW1zJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBhZGRBbGJ1bTogZnVuY3Rpb24gYWRkQWxidW0oX3JlZjIsIGFsYnVtRGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIGdldFJlcywgbmV3QWxidW0sIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQobG9jYWxNYWluVVJMLCB7CiAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgbWJpZDogYWxidW1EYXRhLm1iaWQKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBnZXRSZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFnZXRSZXMuZGF0YS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY29uc29sZS5sb2coIsOBbGJ1bSB5YSBleGlzdGUiKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIG5ld0FsYnVtID0gewogICAgICAgICAgICAgICAgbWJpZDogYWxidW1EYXRhLm1iaWQsCiAgICAgICAgICAgICAgICBuYW1lOiBhbGJ1bURhdGEubmFtZSwKICAgICAgICAgICAgICAgIGFydGlzdDogYWxidW1EYXRhLmFydGlzdCwKICAgICAgICAgICAgICAgIHJldmlld3M6IFtdLAogICAgICAgICAgICAgICAgc2NvcmU6IDAsCiAgICAgICAgICAgICAgICBpbWFnZTogYWxidW1EYXRhLmltYWdlWzJdWycjdGV4dCddCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDExOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KGxvY2FsTWFpblVSTCwgbmV3QWxidW0pOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByZXMuZGF0YS5jb2xsZWN0aW9ucyA9IFtdOwogICAgICAgICAgICAgIGNvbW1pdCgnbmV3QWxidW0nLCByZXMuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICByZW1vdmVBbGJ1bTogZnVuY3Rpb24gcmVtb3ZlQWxidW0oX3JlZjMsIGFsYnVtSWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmRlbGV0ZShsb2NhbE1haW5VUkwgKyAnLycgKyBhbGJ1bUlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoJ3JlbW92ZUFsYnVtJywgYWxidW1JZCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0QWxidW1zOiBmdW5jdGlvbiBzZXRBbGJ1bXMoc3RhdGUsIGFsYnVtcykgewogICAgYWxidW1zLmZvckVhY2goZnVuY3Rpb24gKGFsYnVtKSB7CiAgICAgIGFsYnVtLmNvbGxlY3Rpb25zID0gW107CiAgICAgIGNvbGxlY3Rpb25zLnN0YXRlLmNvbGxlY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKGNvbGxlY3Rpb24pIHsKICAgICAgICBpZiAoY29sbGVjdGlvbi5hbGJ1bUlkcy5pbmNsdWRlcyhhbGJ1bS5pZCkpIHsKICAgICAgICAgIGFsYnVtLmNvbGxlY3Rpb25zLnB1c2goY29sbGVjdGlvbi5pZCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogICAgc3RhdGUuYWxidW1zID0gYWxidW1zOwogIH0sCiAgbmV3QWxidW06IGZ1bmN0aW9uIG5ld0FsYnVtKHN0YXRlLCBhbGJ1bSkgewogICAgcmV0dXJuIHN0YXRlLmFsYnVtcyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuYWxidW1zKSwgW2FsYnVtXSk7CiAgfSwKICByZW1vdmVBbGJ1bTogZnVuY3Rpb24gcmVtb3ZlQWxidW0oc3RhdGUsIGlkKSB7CiAgICByZXR1cm4gc3RhdGUuYWxidW1zID0gc3RhdGUuYWxidW1zLmZpbHRlcihmdW5jdGlvbiAoYWxidW0pIHsKICAgICAgcmV0dXJuIGFsYnVtLmlkICE9PSBpZDsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js"],"names":["axios","collections","localMainURL","state","albums","getters","allAlbums","actions","fetchAlbums","commit","get","response","data","addAlbum","albumData","params","mbid","getRes","length","console","log","newAlbum","name","artist","reviews","score","image","post","res","removeAlbum","albumId","delete","mutations","setAlbums","forEach","album","collection","albumIds","includes","id","push","filter"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport collections from './collections';\n\nconst localMainURL = \"http://localhost:3000/albums\";\n\nconst state = {\n    albums: [],\n};\n\nconst getters = {\n    allAlbums: state => state.albums,\n    \n  };\n  \nconst actions = {\n    async fetchAlbums({ commit }) {\n        const response = await axios.get(localMainURL);\n        commit('setAlbums', response.data);\n    },\n    async addAlbum({ commit }, albumData) {\n\n        const getRes = await axios.get(localMainURL, {\n          params: {\n            mbid: albumData.mbid,\n          }\n        });\n        if (getRes.data.length) {\n          console.log(\"Álbum ya existe\");\n        }\n        else {\n          const newAlbum = {\n            mbid: albumData.mbid,\n            name: albumData.name,\n            artist: albumData.artist,\n            reviews: [],\n            score: 0,\n            image: albumData.image[2]['#text'],\n          }\n          const res = await axios.post(localMainURL, newAlbum);\n          res.data.collections = []\n          commit('newAlbum', res.data);\n        }\n        \n    },\n    async removeAlbum({ commit }, albumId) {\n        await axios.delete(localMainURL + '/' + albumId);\n        commit('removeAlbum', albumId);\n    },\n    \n};\n\nconst mutations = {\n  setAlbums: (state, albums) => {\n    albums.forEach((album) => {\n      album.collections = []\n      collections.state.collections.forEach((collection) => {\n        if (collection.albumIds.includes(album.id)) {\n          album.collections.push(collection.id);\n        }\n      });\n    });\n    state.albums = albums;\n  },\n  newAlbum: (state, album) => state.albums = [...state.albums, album],\n  removeAlbum: (state, id) =>\n  (state.albums = state.albums.filter(album => album.id !== id)),\n  \n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}