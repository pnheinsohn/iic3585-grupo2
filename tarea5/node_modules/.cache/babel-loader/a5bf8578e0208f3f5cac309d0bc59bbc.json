{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js??ref--13-0!/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","mtime":1591589377492},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9zZWJhL0Rlc2t0b3AvdGFyZWFzLWF2YW56YWRvL3RhcmVhNS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9zZWJhL0Rlc2t0b3AvdGFyZWFzLWF2YW56YWRvL3RhcmVhNS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBjb2xsZWN0aW9ucyBmcm9tICcuL2NvbGxlY3Rpb25zJzsKdmFyIGxvY2FsTWFpblVSTCA9ICJodHRwOi8vbG9jYWxob3N0OjMwMDAvYWxidW1zIjsKdmFyIHN0YXRlID0gewogIGFsYnVtczogW10sCiAgc2hvd25BbGJ1bXM6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGFsbEFsYnVtczogZnVuY3Rpb24gYWxsQWxidW1zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuYWxidW1zOwogIH0sCiAgc2hvd25BbGJ1bXM6IGZ1bmN0aW9uIHNob3duQWxidW1zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc2hvd25BbGJ1bXM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBmZXRjaEFsYnVtczogZnVuY3Rpb24gZmV0Y2hBbGJ1bXMoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGxvY2FsTWFpblVSTCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0QWxidW1zJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBjaGFuZ2VTaG93bkFsYnVtczogZnVuY3Rpb24gY2hhbmdlU2hvd25BbGJ1bXMoX3JlZjIsIGNvbGxlY3Rpb25JZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIGNvbGxlY3Rpb24sIGFsYnVtczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coY29sbGVjdGlvbklkKTsKICAgICAgICAgICAgICBjb2xsZWN0aW9uID0gY29sbGVjdGlvbnMuc3RhdGUuY29sbGVjdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChjb2xsZWN0aW9uKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gY29sbGVjdGlvbi5pZCA9PSBjb2xsZWN0aW9uSWQ7CiAgICAgICAgICAgICAgfSlbMF07CiAgICAgICAgICAgICAgYWxidW1zID0gc3RhdGUuYWxidW1zLmZpbHRlcihmdW5jdGlvbiAoYWxidW0pIHsKICAgICAgICAgICAgICAgIHJldHVybiBjb2xsZWN0aW9uLmFsYnVtSWRzLmluY2x1ZGVzKGFsYnVtLmlkKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFNob3duQWxidW1zJywgYWxidW1zKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgYWRkQWxidW06IGZ1bmN0aW9uIGFkZEFsYnVtKF9yZWYzLCBhbGJ1bURhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCBnZXRSZXMsIG5ld0FsYnVtLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGxvY2FsTWFpblVSTCwgewogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgIG1iaWQ6IGFsYnVtRGF0YS5tYmlkCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZ2V0UmVzID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGlmICghZ2V0UmVzLmRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDg7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLDgWxidW0geWEgZXhpc3RlIik7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBuZXdBbGJ1bSA9IHsKICAgICAgICAgICAgICAgIG1iaWQ6IGFsYnVtRGF0YS5tYmlkLAogICAgICAgICAgICAgICAgbmFtZTogYWxidW1EYXRhLm5hbWUsCiAgICAgICAgICAgICAgICBhcnRpc3Q6IGFsYnVtRGF0YS5hcnRpc3QsCiAgICAgICAgICAgICAgICByZXZpZXdzOiBbXSwKICAgICAgICAgICAgICAgIHNjb3JlOiAwLAogICAgICAgICAgICAgICAgaW1hZ2U6IGFsYnVtRGF0YS5pbWFnZVsyXVsnI3RleHQnXQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChsb2NhbE1haW5VUkwsIG5ld0FsYnVtKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmVzLmRhdGEuY29sbGVjdGlvbnMgPSBbXTsKICAgICAgICAgICAgICBjb21taXQoJ25ld0FsYnVtJywgcmVzLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgcmVtb3ZlQWxidW06IGZ1bmN0aW9uIHJlbW92ZUFsYnVtKF9yZWY0LCBhbGJ1bUlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUobG9jYWxNYWluVVJMICsgJy8nICsgYWxidW1JZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY29tbWl0KCdyZW1vdmVBbGJ1bScsIGFsYnVtSWQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldEFsYnVtczogZnVuY3Rpb24gc2V0QWxidW1zKHN0YXRlLCBhbGJ1bXMpIHsKICAgIGFsYnVtcy5mb3JFYWNoKGZ1bmN0aW9uIChhbGJ1bSkgewogICAgICBhbGJ1bS5jb2xsZWN0aW9ucyA9IFtdOwogICAgICBjb2xsZWN0aW9ucy5zdGF0ZS5jb2xsZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xsZWN0aW9uKSB7CiAgICAgICAgaWYgKGNvbGxlY3Rpb24uYWxidW1JZHMuaW5jbHVkZXMoYWxidW0uaWQpKSB7CiAgICAgICAgICBhbGJ1bS5jb2xsZWN0aW9ucy5wdXNoKGNvbGxlY3Rpb24uaWQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICAgIHN0YXRlLmFsYnVtcyA9IGFsYnVtczsKICB9LAogIG5ld0FsYnVtOiBmdW5jdGlvbiBuZXdBbGJ1bShzdGF0ZSwgYWxidW0pIHsKICAgIHJldHVybiBzdGF0ZS5hbGJ1bXMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHN0YXRlLmFsYnVtcyksIFthbGJ1bV0pOwogIH0sCiAgcmVtb3ZlQWxidW06IGZ1bmN0aW9uIHJlbW92ZUFsYnVtKHN0YXRlLCBpZCkgewogICAgcmV0dXJuIHN0YXRlLmFsYnVtcyA9IHN0YXRlLmFsYnVtcy5maWx0ZXIoZnVuY3Rpb24gKGFsYnVtKSB7CiAgICAgIHJldHVybiBhbGJ1bS5pZCAhPT0gaWQ7CiAgICB9KTsKICB9LAogIHNldFNob3duQWxidW1zOiBmdW5jdGlvbiBzZXRTaG93bkFsYnVtcyhzdGF0ZSwgYWxidW1zKSB7CiAgICBzdGF0ZS5zaG93bkFsYnVtcyA9IGFsYnVtczsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js"],"names":["axios","collections","localMainURL","state","albums","shownAlbums","getters","allAlbums","actions","fetchAlbums","commit","get","response","data","changeShownAlbums","collectionId","console","log","collection","filter","id","album","albumIds","includes","addAlbum","albumData","params","mbid","getRes","length","newAlbum","name","artist","reviews","score","image","post","res","removeAlbum","albumId","delete","mutations","setAlbums","forEach","push","setShownAlbums"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,YAAY,GAAG,8BAArB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,EADE;AAEVC,EAAAA,WAAW,EAAE;AAFH,CAAd;AAKA,IAAMC,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE,mBAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA,GADJ;AAEZC,EAAAA,WAAW,EAAE,qBAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,WAAV;AAAA;AAFN,CAAhB;AAKA,IAAMG,OAAO,GAAG;AACNC,EAAAA,WADM,6BACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACHV,KAAK,CAACW,GAAN,CAAUT,YAAV,CADG;;AAAA;AACpBU,cAAAA,QADoB;AAE1BF,cAAAA,MAAM,CAAC,WAAD,EAAcE,QAAQ,CAACC,IAAvB,CAAN;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,GAJW;AAKNC,EAAAA,iBALM,oCAKwBC,YALxB,EAKsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxBL,cAAAA,MAAwB,SAAxBA,MAAwB;AAChDM,cAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACMG,cAAAA,UAF0C,GAE7BjB,WAAW,CAACE,KAAZ,CAAkBF,WAAlB,CAChBkB,MADgB,CACT,UAAAD,UAAU;AAAA,uBAAIA,UAAU,CAACE,EAAX,IAAiBL,YAArB;AAAA,eADD,EACoC,CADpC,CAF6B;AAI1CX,cAAAA,MAJ0C,GAIjCD,KAAK,CAACC,MAAN,CACZe,MADY,CACL,UAAAE,KAAK;AAAA,uBAAIH,UAAU,CAACI,QAAX,CAAoBC,QAApB,CAA6BF,KAAK,CAACD,EAAnC,CAAJ;AAAA,eADA,CAJiC;AAMhDV,cAAAA,MAAM,CAAC,gBAAD,EAAmBN,MAAnB,CAAN;;AANgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjD,GAZW;AAaNoB,EAAAA,QAbM,2BAaeC,SAbf,EAa0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBf,cAAAA,MAAqB,SAArBA,MAAqB;AAAA;AAAA,qBAEbV,KAAK,CAACW,GAAN,CAAUT,YAAV,EAAwB;AAC3CwB,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAEF,SAAS,CAACE;AADV;AADmC,eAAxB,CAFa;;AAAA;AAE5BC,cAAAA,MAF4B;;AAAA,mBAO9BA,MAAM,CAACf,IAAP,CAAYgB,MAPkB;AAAA;AAAA;AAAA;;AAQhCb,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AARgC;AAAA;;AAAA;AAW1Ba,cAAAA,QAX0B,GAWf;AACfH,gBAAAA,IAAI,EAAEF,SAAS,CAACE,IADD;AAEfI,gBAAAA,IAAI,EAAEN,SAAS,CAACM,IAFD;AAGfC,gBAAAA,MAAM,EAAEP,SAAS,CAACO,MAHH;AAIfC,gBAAAA,OAAO,EAAE,EAJM;AAKfC,gBAAAA,KAAK,EAAE,CALQ;AAMfC,gBAAAA,KAAK,EAAEV,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmB,OAAnB;AANQ,eAXe;AAAA;AAAA,qBAmBdnC,KAAK,CAACoC,IAAN,CAAWlC,YAAX,EAAyB4B,QAAzB,CAnBc;;AAAA;AAmB1BO,cAAAA,GAnB0B;AAoBhCA,cAAAA,GAAG,CAACxB,IAAJ,CAASZ,WAAT,GAAuB,EAAvB;AACAS,cAAAA,MAAM,CAAC,UAAD,EAAa2B,GAAG,CAACxB,IAAjB,CAAN;;AArBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBrC,GArCW;AAsCNyB,EAAAA,WAtCM,8BAsCkBC,OAtClB,EAsC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB7B,cAAAA,MAAmB,SAAnBA,MAAmB;AAAA;AAAA,qBAC7BV,KAAK,CAACwC,MAAN,CAAatC,YAAY,GAAG,GAAf,GAAqBqC,OAAlC,CAD6B;;AAAA;AAEnC7B,cAAAA,MAAM,CAAC,aAAD,EAAgB6B,OAAhB,CAAN;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGtC;AAzCW,CAAhB;AA6CA,IAAME,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,mBAACvC,KAAD,EAAQC,MAAR,EAAmB;AAC5BA,IAAAA,MAAM,CAACuC,OAAP,CAAe,UAACtB,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACpB,WAAN,GAAoB,EAApB;AACAA,MAAAA,WAAW,CAACE,KAAZ,CAAkBF,WAAlB,CAA8B0C,OAA9B,CAAsC,UAACzB,UAAD,EAAgB;AACpD,YAAIA,UAAU,CAACI,QAAX,CAAoBC,QAApB,CAA6BF,KAAK,CAACD,EAAnC,CAAJ,EAA4C;AAC1CC,UAAAA,KAAK,CAACpB,WAAN,CAAkB2C,IAAlB,CAAuB1B,UAAU,CAACE,EAAlC;AACD;AACF,OAJD;AAKD,KAPD;AAQAjB,IAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD,GAXe;AAYhB0B,EAAAA,QAAQ,EAAE,kBAAC3B,KAAD,EAAQkB,KAAR;AAAA,WAAkBlB,KAAK,CAACC,MAAN,gCAAmBD,KAAK,CAACC,MAAzB,IAAiCiB,KAAjC,EAAlB;AAAA,GAZM;AAahBiB,EAAAA,WAAW,EAAE,qBAACnC,KAAD,EAAQiB,EAAR;AAAA,WACZjB,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAAN,CAAae,MAAb,CAAoB,UAAAE,KAAK;AAAA,aAAIA,KAAK,CAACD,EAAN,KAAaA,EAAjB;AAAA,KAAzB,CADH;AAAA,GAbG;AAehByB,EAAAA,cAAc,EAAE,wBAAC1C,KAAD,EAAQC,MAAR,EAAmB;AACjCD,IAAAA,KAAK,CAACE,WAAN,GAAoBD,MAApB;AACD;AAjBe,CAAlB;AAqBA,eAAe;AACXD,EAAAA,KAAK,EAALA,KADW;AAEXG,EAAAA,OAAO,EAAPA,OAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXiC,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\nimport collections from './collections';\n\nconst localMainURL = \"http://localhost:3000/albums\";\n\nconst state = {\n    albums: [],\n    shownAlbums: [],\n};\n\nconst getters = {\n    allAlbums: state => state.albums,\n    shownAlbums: state => state.shownAlbums,\n  };\n  \nconst actions = {\n    async fetchAlbums({ commit }) {\n        const response = await axios.get(localMainURL);\n        commit('setAlbums', response.data);\n    },\n    async changeShownAlbums({ commit }, collectionId) {\n      console.log(collectionId);\n      const collection = collections.state.collections\n        .filter(collection => collection.id == collectionId)[0];\n      const albums = state.albums\n        .filter(album => collection.albumIds.includes(album.id));\n      commit('setShownAlbums', albums);\n    },\n    async addAlbum({ commit }, albumData) {\n\n        const getRes = await axios.get(localMainURL, {\n          params: {\n            mbid: albumData.mbid,\n          }\n        });\n        if (getRes.data.length) {\n          console.log(\"Álbum ya existe\");\n        }\n        else {\n          const newAlbum = {\n            mbid: albumData.mbid,\n            name: albumData.name,\n            artist: albumData.artist,\n            reviews: [],\n            score: 0,\n            image: albumData.image[2]['#text'],\n          }\n          const res = await axios.post(localMainURL, newAlbum);\n          res.data.collections = []\n          commit('newAlbum', res.data);\n        }\n        \n    },\n    async removeAlbum({ commit }, albumId) {\n        await axios.delete(localMainURL + '/' + albumId);\n        commit('removeAlbum', albumId);\n    },\n    \n};\n\nconst mutations = {\n  setAlbums: (state, albums) => {\n    albums.forEach((album) => {\n      album.collections = []\n      collections.state.collections.forEach((collection) => {\n        if (collection.albumIds.includes(album.id)) {\n          album.collections.push(collection.id);\n        }\n      });\n    });\n    state.albums = albums;\n  },\n  newAlbum: (state, album) => state.albums = [...state.albums, album],\n  removeAlbum: (state, id) =>\n  (state.albums = state.albums.filter(album => album.id !== id)),\n  setShownAlbums: (state, albums) => {\n    state.shownAlbums = albums;\n  }\n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}