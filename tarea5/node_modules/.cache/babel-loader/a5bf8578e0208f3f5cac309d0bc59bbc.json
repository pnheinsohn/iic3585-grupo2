{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js??ref--13-0!/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","mtime":1591610462921},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js"],"names":["axios","collections","localMainURL","localCollectionsURL","state","albums","shownAlbums","shownCollectionId","getters","allAlbums","actions","fetchAlbums","commit","get","response","data","changeShownAlbums","collectionId","collection","filter","id","album","albumIds","includes","addAlbum","albumData","params","mbid","getRes","length","console","log","newAlbum","name","artist","reviews","score","image","post","res","removeAlbum","albumId","delete","removeFromCollection","patch","mutations","setAlbums","forEach","push","setShownAlbums","removeFromShownAlbums","setShownCollectionId","resetShownCollectionId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport collections from './collections';\n\nconst localMainURL = \"http://localhost:3000/albums\";\nconst localCollectionsURL = \"http://localhost:3000/playlists\";\n\n\nconst state = {\n    albums: [],\n    shownAlbums: [],\n    shownCollectionId: 0,\n};\n\nconst getters = {\n    allAlbums: state => state.albums,\n    shownAlbums: state => state.shownAlbums,\n    shownCollectionId: state => state.shownCollectionId\n  };\n  \nconst actions = {\n    async fetchAlbums({ commit }) {\n        const response = await axios.get(localMainURL);\n        commit('setAlbums', response.data);\n    },\n    async changeShownAlbums({ commit }, collectionId) {\n      const collection = collections.state.collections\n        .filter(collection => collection.id == collectionId)[0];\n      const albums = state.albums\n        .filter(album => collection.albumIds.includes(album.id));\n      commit('setShownAlbums', albums);\n      commit('setShownCollectionId', collectionId);\n    },\n    async addAlbum({ commit }, albumData) {\n\n        const getRes = await axios.get(localMainURL, {\n          params: {\n            mbid: albumData.mbid,\n          }\n        });\n        if (getRes.data.length) {\n          console.log(\"Álbum ya existe\");\n        }\n        else {\n          const newAlbum = {\n            mbid: albumData.mbid,\n            name: albumData.name,\n            artist: albumData.artist,\n            reviews: [],\n            score: 0,\n            image: albumData.image[2]['#text'],\n          }\n          const res = await axios.post(localMainURL, newAlbum);\n          res.data.collections = []\n          commit('newAlbum', res.data);\n        }\n    },\n    async removeAlbum({ commit }, albumId) {\n        await axios.delete(localMainURL + '/' + albumId);\n        commit('removeAlbum', albumId);\n    },\n    async removeFromCollection({ commit }, albumId) {\n        const collection = collections.state.collections\n            .filter(collection => collection.id == state.shownCollectionId)[0];\n        collection.albumIds = collection.albumIds\n            .filter(id => id != albumId);\n        await axios.patch(localCollectionsURL + '/' + collection.id, {\n            albumIds: collection.albumIds,\n        });\n        const album = state.albums\n            .filter(album => album.id == albumId)[0];\n        album.collections = album.collections\n            .filter(id => id != collection.id);\n        commit('removeFromShownAlbums', albumId);\n    }\n    \n};\n\nconst mutations = {\n  setAlbums: (state, albums) => {\n    albums.forEach((album) => {\n      album.collections = []\n      collections.state.collections.forEach((collection) => {\n        if (collection.albumIds.includes(album.id)) {\n          album.collections.push(collection.id);\n        }\n      });\n    });\n    state.albums = albums;\n  },\n  newAlbum: (state, album) => state.albums = [...state.albums, album],\n  removeAlbum: (state, id) =>\n  (state.albums = state.albums.filter(album => album.id !== id)),\n  setShownAlbums: (state, albums) => {\n    state.shownAlbums = albums;\n  },\n  removeFromShownAlbums: (state, albumId) => {\n    state.shownAlbums = state.shownAlbums\n      .filter(album => album.id != albumId);\n  },\n  setShownCollectionId: (state, collectionId) => {\n    state.shownCollectionId = collectionId;\n  },\n  resetShownCollectionId: (state) => {\n    state.shownCollectionId = 0;\n  }\n\n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}