{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js??ref--13-0!/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/collections.js","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/collections.js","mtime":1591577741871},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvc2ViYS9EZXNrdG9wL3RhcmVhcy1hdmFuemFkby90YXJlYTUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgbG9jYWxDb2xsZWN0aW9uc1VSTCA9ICJodHRwOi8vbG9jYWxob3N0OjMwMDAvcGxheWxpc3RzIjsKLyogY29uc3QgbG9jYWxBbGJ1bXNVUkwgPSAiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FsYnVtcyI7ICovCgp2YXIgc3RhdGUgPSB7CiAgY29sbGVjdGlvbnM6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGFsbENvbGxlY3Rpb25zOiBmdW5jdGlvbiBhbGxDb2xsZWN0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmNvbGxlY3Rpb25zOwogIH0sCiAgYWxidW1JbkNvbGxlY3Rpb246IGZ1bmN0aW9uIGFsYnVtSW5Db2xsZWN0aW9uKHN0YXRlLCBjb2xsZWN0aW9uSWQsIGFsYnVtSWQpIHsKICAgIHZhciBjb2xsZWN0aW9uID0gc3RhdGUuY29sbGVjdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChjb2xsZWN0aW9uKSB7CiAgICAgIHJldHVybiBjb2xsZWN0aW9uLmlkICE9PSBjb2xsZWN0aW9uSWQ7CiAgICB9KVswXTsKICAgIGlmIChhbGJ1bUlkIGluIGNvbGxlY3Rpb24uYWxidW1JZHMpIHJldHVybiB0cnVlO2Vsc2UgcmV0dXJuIGZhbHNlOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hDb2xsZWN0aW9uczogZnVuY3Rpb24gZmV0Y2hDb2xsZWN0aW9ucyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQobG9jYWxDb2xsZWN0aW9uc1VSTCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0Q29sbGVjdGlvbnMnLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9CiAgLyogYXN5bmMgZmV0Y2hDb2xsZWN0aW9uc0J5SWQoeyBjb21taXQgfSwgY29sbGVjdGlvbklkKSB7CiAgICAgIGNvbnN0IHBsYXlsaXN0UmVzID0gYXdhaXQgYXhpb3MuZ2V0KGxvY2FsQ29sbGVjdGlvbnNVUkwsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgIGlkOiBjb2xsZWN0aW9uSWQsCiAgICAgICAgICB9CiAgICAgIH0pOwogICAgICBjb25zdCBhbGJ1bUlkcyA9IHBsYXlsaXN0UmVzLmRhdGFbMF0uYWxidW1JZHM7CiAgICAgIHRoaXMuYWxidW1JZHMgPSBhbGJ1bUlkczsKICAgICAgY29uc3QgYWxidW1Qcm9taXNlcyA9IGFsYnVtSWRzLm1hcChhc3luYyAoaWQpID0+IHsKICAgICAgICAgIHJldHVybiBhd2FpdCBheGlvcy5nZXQobG9jYWxBbGJ1bXNVUkwsIHsKICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgaWQsCiAgICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBjb25zdCBzb2x2ZWRQcm9taXNlcyA9IGF3YWl0IFByb21pc2UuYWxsKGFsYnVtUHJvbWlzZXMpOwogICAgICBzb2x2ZWRQcm9taXNlcy5mb3JFYWNoKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuYWxidW1zID0gWy4uLnRoaXMuYWxidW1zLCByZXMuZGF0YVswXV07CiAgICAgIH0pOwogIH0sICovCgp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldENvbGxlY3Rpb25zOiBmdW5jdGlvbiBzZXRDb2xsZWN0aW9ucyhzdGF0ZSwgY29sbGVjdGlvbnMpIHsKICAgIHJldHVybiBzdGF0ZS5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zOwogIH0sCiAgbmV3Q29sbGVjdGlvbjogZnVuY3Rpb24gbmV3Q29sbGVjdGlvbihzdGF0ZSwgY29sbGVjdGlvbikgewogICAgcmV0dXJuIHN0YXRlLmNvbGxlY3Rpb25zLnVuc2hpZnQoY29sbGVjdGlvbik7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/collections.js"],"names":["axios","localCollectionsURL","state","collections","getters","allCollections","albumInCollection","collectionId","albumId","collection","filter","id","albumIds","actions","fetchCollections","commit","get","response","data","mutations","setCollections","newCollection","unshift"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,mBAAmB,GAAG,iCAA5B;AACA;;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,WAAW,EAAE;AADH,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,cAAc,EAAE,wBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GADT;AAEZG,EAAAA,iBAAiB,EAAE,2BAACJ,KAAD,EAAQK,YAAR,EAAsBC,OAAtB,EAAkC;AACjD,QAAMC,UAAU,GAAGP,KAAK,CAACC,WAAN,CACdO,MADc,CACP,UAAAD,UAAU;AAAA,aAAIA,UAAU,CAACE,EAAX,KAAkBJ,YAAtB;AAAA,KADH,EACuC,CADvC,CAAnB;AAEA,QAAIC,OAAO,IAAIC,UAAU,CAACG,QAA1B,EAAoC,OAAO,IAAP,CAApC,KACK,OAAO,KAAP;AACR;AAPW,CAAhB;AAUA,IAAMC,OAAO,GAAG;AACNC,EAAAA,gBADM,kCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACRf,KAAK,CAACgB,GAAN,CAAUf,mBAAV,CADQ;;AAAA;AACzBgB,cAAAA,QADyB;AAE/BF,cAAAA,MAAM,CAAC,gBAAD,EAAmBE,QAAQ,CAACC,IAA5B,CAAN;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGlC;AAED;;;;;;;;;;;;;;;;;;;;;AANY,CAAhB;AA6BA,IAAMC,SAAS,GAAG;AACdC,EAAAA,cAAc,EAAE,wBAAClB,KAAD,EAAQC,WAAR;AAAA,WAAyBD,KAAK,CAACC,WAAN,GAAoBA,WAA7C;AAAA,GADF;AAEdkB,EAAAA,aAAa,EAAE,uBAACnB,KAAD,EAAQO,UAAR;AAAA,WAAuBP,KAAK,CAACC,WAAN,CAAkBmB,OAAlB,CAA0Bb,UAA1B,CAAvB;AAAA;AAFD,CAAlB;AAMA,eAAe;AACXP,EAAAA,KAAK,EAALA,KADW;AAEXE,EAAAA,OAAO,EAAPA,OAFW;AAGXS,EAAAA,OAAO,EAAPA,OAHW;AAIXM,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\n\nconst localCollectionsURL = \"http://localhost:3000/playlists\";\n/* const localAlbumsURL = \"http://localhost:3000/albums\"; */\n\nconst state = {\n    collections: [],\n};\n\nconst getters = {\n    allCollections: state => state.collections,\n    albumInCollection: (state, collectionId, albumId) => {\n        const collection = state.collections\n            .filter(collection => collection.id !== collectionId)[0];\n        if (albumId in collection.albumIds) return true;\n        else return false;\n    },\n};\n  \nconst actions = {\n    async fetchCollections({ commit }) {\n        const response = await axios.get(localCollectionsURL);\n        commit('setCollections', response.data);\n    },\n    \n    /* async fetchCollectionsById({ commit }, collectionId) {\n        const playlistRes = await axios.get(localCollectionsURL, {\n            params: {\n                id: collectionId,\n            }\n        });\n        const albumIds = playlistRes.data[0].albumIds;\n        this.albumIds = albumIds;\n        const albumPromises = albumIds.map(async (id) => {\n            return await axios.get(localAlbumsURL, {\n                params: {\n                    id,\n                }\n            });\n        });\n        const solvedPromises = await Promise.all(albumPromises);\n        solvedPromises.forEach((res) => {\n            this.albums = [...this.albums, res.data[0]];\n        });\n    }, */\n    \n};\n\nconst mutations = {\n    setCollections: (state, collections) => (state.collections = collections),\n    newCollection: (state, collection) => state.collections.unshift(collection),\n\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}