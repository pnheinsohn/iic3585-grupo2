{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/seba/Desktop/tareas-avanzado/tarea5/src/components/CollectionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/components/CollectionItem.vue","mtime":1591600319811},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvc2ViYS9EZXNrdG9wL3RhcmVhcy1hdmFuemFkby90YXJlYTUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9zZWJhL0Rlc2t0b3AvdGFyZWFzLWF2YW56YWRvL3RhcmVhNS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBbGJ1bUl0ZW0gZnJvbSAnLi9BbGJ1bUl0ZW0udnVlJzsKaW1wb3J0IHsgQ2Fyb3VzZWwsIFNsaWRlIH0gZnJvbSAndnVlLWNhcm91c2VsJzsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvbGxlY3Rpb25JdGVtJywKICBjb21wb25lbnRzOiB7CiAgICBBbGJ1bUl0ZW06IEFsYnVtSXRlbSwKICAgIENhcm91c2VsOiBDYXJvdXNlbCwKICAgIFNsaWRlOiBTbGlkZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBhbGJ1bXM6IFtdLAogICAgICBhbGJ1bUlkczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogbWFwR2V0dGVycyhbInNob3duQWxidW1zIiwgImFsbEFsYnVtcyJdKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CgogICAgICAgICAgICAgIGlmIChfdGhpcy5hbGxBbGJ1bXMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmZldGNoQWxidW1zKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX3RoaXMuY2hhbmdlU2hvd25BbGJ1bXMoX3RoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWyJmZXRjaEFsYnVtcyIsICJjaGFuZ2VTaG93bkFsYnVtcyIsICJyZW1vdmVGcm9tQ29sbGVjdGlvbiJdKSkKfTs="},{"version":3,"sources":["CollectionItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,SAAA,MAAA,iBAAA;AACA,SAAA,QAAA,EAAA,KAAA,QAAA,cAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,KAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAbA;AAcA,EAAA,QAAA,EAAA,UAAA,CAAA,CACA,aADA,EAEA,WAFA,CAAA,CAdA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAoBA,KAAA,CAAA,SAAA,CAAA,MApBA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAqBA,KAAA,CAAA,WAAA,EArBA;;AAAA;AAsBA,cAAA,KAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;;AAtBA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBA,cAAA,OAAA,CAAA,KAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA,GA7CA;AA8CA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,aADA,EAEA,mBAFA,EAGA,sBAHA,CAAA,CADA;AA9CA,CAAA","sourcesContent":["<template>\n    <carousel\n        ref=\"my-carousel\"\n        :loop=\"true\"\n        :autoplay=\"true\"\n        :autoplayTimeout=\"10000\"\n        :autoplayHoverPause=\"true\"\n        :perPage=\"6\"\n        :navigationEnabled=\"true\"\n        :speed=\"1500\"\n        :centerMode=\"true\">\n        <slide\n            v-bind:key=\"album.id\"\n            v-for=\"album in shownAlbums.slice().reverse()\">\n            <AlbumItem\n                v-bind:album=\"album\"\n                v-on:remove-album=\"removeFromCollection\"/>\n        </slide>\n    </carousel>\n</template>\n\n<script>\nimport AlbumItem from './AlbumItem.vue';\nimport { Carousel, Slide } from 'vue-carousel';\nimport { mapGetters, mapActions } from 'vuex';\n\n\nexport default {\n    name: 'CollectionItem',\n    components: {\n        AlbumItem,\n        Carousel,\n        Slide,\n    },\n    data() {\n        return {\n            name: '',\n            albums: [],\n            albumIds: [],\n        }\n    },\n    computed: mapGetters([\n    \"shownAlbums\",\n    \"allAlbums\"\n    ]),\n    async created() {\n        try {\n            /* const playlistRes = await axios.get(playlistsURL, {\n                params: {\n                    id: this.$route.params.id,\n                }\n            });\n            const albumIds = playlistRes.data[0].albumIds;\n            this.albumIds = albumIds;\n            const albumPromises = albumIds.map(async (id) => {\n                return await axios.get(localAlbumsURL, {\n                    params: {\n                        id,\n                    }\n                });\n            });\n            const solvedPromises = await Promise.all(albumPromises);\n            solvedPromises.forEach((res) => {\n                this.albums = [...this.albums, res.data[0]];\n            }); */\n            if (!this.allAlbums.length) {\n            await this.fetchAlbums();\n            this.changeShownAlbums(this.$route.params.id);\n        }\n        } catch(error) {\n            console.error(error);\n        }\n    },\n    methods: {\n        ...mapActions([\n        \"fetchAlbums\",\n        \"changeShownAlbums\",\n        \"removeFromCollection\"\n        ]),\n    }\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/components"}]}