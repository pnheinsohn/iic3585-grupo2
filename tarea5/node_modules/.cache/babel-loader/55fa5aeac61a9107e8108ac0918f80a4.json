{"remainingRequest":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js!/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js??ref--13-0!/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","dependencies":[{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js","mtime":1591556883698},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/seba/Desktop/tareas-avanzado/tarea5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvc2ViYS9EZXNrdG9wL3RhcmVhcy1hdmFuemFkby90YXJlYTUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvc2ViYS9EZXNrdG9wL3RhcmVhcy1hdmFuemFkby90YXJlYTUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgbG9jYWxNYWluVVJMID0gImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hbGJ1bXMiOwp2YXIgc3RhdGUgPSB7CiAgYWxidW1zOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxBbGJ1bXM6IGZ1bmN0aW9uIGFsbEFsYnVtcyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmFsYnVtczsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoQWxidW1zOiBmdW5jdGlvbiBmZXRjaEFsYnVtcyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQobG9jYWxNYWluVVJMKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRBbGJ1bXMnLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZEFsYnVtOiBmdW5jdGlvbiBhZGRBbGJ1bShfcmVmMiwgYWxidW1EYXRhKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgZ2V0UmVzLCBuZXdBbGJ1bSwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChsb2NhbE1haW5VUkwsIHsKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICBtYmlkOiBhbGJ1bURhdGEubWJpZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGdldFJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAoIWdldFJlcy5kYXRhLmxlbmd0aCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiw4FsYnVtIHlhIGV4aXN0ZSIpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgbmV3QWxidW0gPSB7CiAgICAgICAgICAgICAgICBtYmlkOiBhbGJ1bURhdGEubWJpZCwKICAgICAgICAgICAgICAgIG5hbWU6IGFsYnVtRGF0YS5uYW1lLAogICAgICAgICAgICAgICAgYXJ0aXN0OiBhbGJ1bURhdGEuYXJ0aXN0LAogICAgICAgICAgICAgICAgcmV2aWV3czogW10sCiAgICAgICAgICAgICAgICBzY29yZTogMCwKICAgICAgICAgICAgICAgIGltYWdlOiBhbGJ1bURhdGEuaW1hZ2VbMl1bJyN0ZXh0J10KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QobG9jYWxNYWluVVJMLCBuZXdBbGJ1bSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIC8vdGhpcy5hbGJ1bXMgPSBbLi4udGhpcy5hbGJ1bXMsIHJlcy5kYXRhXTsKICAgICAgICAgICAgICBjb21taXQoJ25ld0FsYnVtJywgcmVzLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgcmVtb3ZlQWxidW06IGZ1bmN0aW9uIHJlbW92ZUFsYnVtKF9yZWYzLCBhbGJ1bUlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUobG9jYWxNYWluVVJMICsgJy8nICsgYWxidW1JZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgLy90aGlzLmFsYnVtcyA9IHRoaXMuYWxidW1zLmZpbHRlcihhbGJ1bSA9PiBhbGJ1bS5pZCAhPT0gYWxidW1JZCk7CiAgICAgICAgICAgICAgY29tbWl0KCdyZW1vdmVBbGJ1bScsIGFsYnVtSWQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldEFsYnVtczogZnVuY3Rpb24gc2V0QWxidW1zKHN0YXRlLCBhbGJ1bXMpIHsKICAgIHJldHVybiBzdGF0ZS5hbGJ1bXMgPSBhbGJ1bXM7CiAgfSwKICAvL25ld0FsYnVtOiAoc3RhdGUsIGFsYnVtKSA9PiBzdGF0ZS5hbGJ1bXMudW5zaGlmdChhbGJ1bSksCiAgbmV3QWxidW06IGZ1bmN0aW9uIG5ld0FsYnVtKHN0YXRlLCBhbGJ1bSkgewogICAgcmV0dXJuIHN0YXRlLmFsYnVtcyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuYWxidW1zKSwgW2FsYnVtXSk7CiAgfSwKICByZW1vdmVBbGJ1bTogZnVuY3Rpb24gcmVtb3ZlQWxidW0oc3RhdGUsIGlkKSB7CiAgICByZXR1cm4gc3RhdGUuYWxidW1zID0gc3RhdGUuYWxidW1zLmZpbHRlcihmdW5jdGlvbiAoYWxidW0pIHsKICAgICAgcmV0dXJuIGFsYnVtLmlkICE9PSBpZDsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/seba/Desktop/tareas-avanzado/tarea5/src/store/modules/albums.js"],"names":["axios","localMainURL","state","albums","getters","allAlbums","actions","fetchAlbums","commit","get","response","data","addAlbum","albumData","params","mbid","getRes","length","console","log","newAlbum","name","artist","reviews","score","image","post","res","removeAlbum","albumId","delete","mutations","setAlbums","album","id","filter"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst localMainURL = \"http://localhost:3000/albums\";\n\nconst state = {\n    albums: []\n};\n\nconst getters = {\n    allAlbums: state => state.albums\n};\n  \nconst actions = {\n    async fetchAlbums({ commit }) {\n        const response = await axios.get(localMainURL);\n        commit('setAlbums', response.data);\n    },\n    async addAlbum({ commit }, albumData) {\n\n        const getRes = await axios.get(localMainURL, {\n          params: {\n            mbid: albumData.mbid,\n          }\n        });\n        if (getRes.data.length) {\n          console.log(\"√Ålbum ya existe\");\n        }\n        else {\n          const newAlbum = {\n            mbid: albumData.mbid,\n            name: albumData.name,\n            artist: albumData.artist,\n            reviews: [],\n            score: 0,\n            image: albumData.image[2]['#text'],\n          }\n          const res = await axios.post(localMainURL, newAlbum);\n          //this.albums = [...this.albums, res.data];\n          commit('newAlbum', res.data);\n        }\n        \n    },\n    async removeAlbum({ commit }, albumId) {\n        await axios.delete(localMainURL + '/' + albumId);\n        //this.albums = this.albums.filter(album => album.id !== albumId);\n        commit('removeAlbum', albumId);\n    }, \n};\n\nconst mutations = {\n    setAlbums: (state, albums) => (state.albums = albums),\n    //newAlbum: (state, album) => state.albums.unshift(album),\n    newAlbum: (state, album) => state.albums = [...state.albums, album],\n    removeAlbum: (state, id) =>\n    (state.albums = state.albums.filter(album => album.id !== id)),\n  \n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}